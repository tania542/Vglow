// Funci√≥n para validar que un correo electr√≥nico tenga un formato v√°lido
function validarEmail(email) {
  const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Expresi√≥n regular para validar email
  return regex.test(email); // Retorna true si el email es v√°lido
}

// Funci√≥n para validar que una contrase√±a sea segura
function validarContrasena(password) {
  // La contrase√±a debe tener: m√≠nimo 8 caracteres, una may√∫scula, una min√∫scula, un n√∫mero y un car√°cter especial
  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;
  return regex.test(password); // Retorna true si la contrase√±a cumple con los requisitos
}

// Funci√≥n que permite alternar la visibilidad del campo de contrase√±a (mostrar/ocultar)
function togglePasswordFunc(toggleElement, inputElement) {
  toggleElement.addEventListener('click', () => {
    // Si actualmente est√° en modo "oculto", cambiar a visible
    if (inputElement.type === 'password') {
      inputElement.type = 'text';
      toggleElement.textContent = 'üôâ'; // Cambia el icono
    } else {
      // Si est√° visible, cambiar a modo "oculto"
      inputElement.type = 'password';
      toggleElement.textContent = 'üôà';
    }
  });
}

/////////////////////////
// L√ìGICA DE LOGIN
/////////////////////////

const formLogin = document.getElementById('form-login'); // Busca el formulario de login

// Solo ejecuta esto si el formulario existe en la p√°gina
if (formLogin) {
  const inputCorreo = document.getElementById('correo'); // Campo correo
  const inputContrasena = document.getElementById('contrasena'); // Campo contrase√±a
  const togglePassword = formLogin.querySelector('.toggle-password'); // Icono del ojo

  togglePasswordFunc(togglePassword, inputContrasena); // Activa funci√≥n para mostrar/ocultar contrase√±a

  // Evento al enviar el formulario
  formLogin.addEventListener('submit', (e) => {
    e.preventDefault(); // Evita recargar la p√°gina

    const correo = inputCorreo.value.trim();
    const contrasena = inputContrasena.value.trim();

    // Verifica que los campos no est√©n vac√≠os
    if (!correo || !contrasena) {
      alert('Por favor completa todos los campos.');
      return;
    }

    // Validaci√≥n simulada de login (esto deber√≠a consultarse con una base de datos real)
    if (correo === 'admin@vglow.com' && contrasena === '1234') {
      alert('Inicio de sesi√≥n exitoso ‚úÖ');
      window.location.href = 'index.html'; // Redirige a la p√°gina principal
    } else {
      alert('Correo o contrase√±a incorrectos ‚ùå');
    }
  });
}

/////////////////////////
// L√ìGICA DE REGISTRO
/////////////////////////

const formRegister = document.getElementById('form-register'); // Busca el formulario de registro

// Solo ejecuta esto si el formulario de registro existe
if (formRegister) {
  const inputUsuario = document.getElementById('Usuario'); // Campo nombre de usuario
  const inputCorreo = formRegister.querySelector('#correo'); // Campo correo
  const inputContrasena = formRegister.querySelector('#contrasena'); // Campo contrase√±a

  // Elementos para mostrar mensajes de error
  const errorUsuario = document.getElementById('error-usuario');
  const errorCorreo = document.getElementById('error-correo');
  const errorContrasena = document.getElementById('error-contrasena');

  const togglePassword = formRegister.querySelector('.toggle-password'); // Icono del ojo

  togglePasswordFunc(togglePassword, inputContrasena); // Activa mostrar/ocultar contrase√±a

  // Evento al enviar el formulario de registro
  formRegister.addEventListener('submit', (e) => {
    e.preventDefault(); // Evita recargar la p√°gina

    // Limpia errores anteriores
    errorUsuario.textContent = '';
    errorCorreo.textContent = '';
    errorContrasena.textContent = '';

    let hayError = false; // Bandera para verificar errores

    // Validar que el nombre de usuario no est√© vac√≠o
    if (inputUsuario.value.trim() === '') {
      errorUsuario.textContent = 'Por favor ingresa un nombre de usuario.';
      hayError = true;
    }

    // Validar el formato del correo
    if (!validarEmail(inputCorreo.value.trim())) {
      errorCorreo.textContent = 'Por favor ingresa un correo v√°lido.';
      hayError = true;
    }

    // Validar que la contrase√±a sea segura
    if (!validarContrasena(inputContrasena.value.trim())) {
      errorContrasena.textContent =
        'La contrase√±a debe tener al menos 8 caracteres, una may√∫scula, una min√∫scula, un n√∫mero y un car√°cter especial.';
      hayError = true;
    }

    // Si no hay errores, mostrar alerta de √©xito (simulado)
    if (!hayError) {
      alert('Registro exitoso üéâ');
    }
  });
}

// Verificamos que el formulario exista en la p√°gina
const formRecuperar = document.getElementById('form-recuperar');

if (formRecuperar) {
  const inputCorreo = document.getElementById('correo-recuperar');
  const errorSpan = document.getElementById('error-correo-recuperar');
  const exitoSpan = document.getElementById('exito-recuperar');

  formRecuperar.addEventListener('submit', (e) => {
    e.preventDefault(); // Evitamos el env√≠o del formulario

    const correo = inputCorreo.value.trim();

    // Limpiamos mensajes anteriores
    limpiarMensajes();

    // Validaciones
    if (!correo) {
      mostrarMensaje(errorSpan, 'Por favor ingresa tu correo electr√≥nico.', 'error');
      return;
    }

    if (!validarEmail(correo)) {
      mostrarMensaje(errorSpan, 'Por favor ingresa un correo v√°lido.', 'error');
      return;
    }

    // Simula env√≠o de recuperaci√≥n y muestra mensaje de √©xito
    mostrarMensaje(exitoSpan, `Se ha enviado un enlace de recuperaci√≥n a: ${correo} üìß`, 'exito');
    formRecuperar.reset(); // Limpiamos campos del formulario
  });

  // Funci√≥n para mostrar mensaje (error o √©xito)
  function mostrarMensaje(span, mensaje, tipo) {
    span.textContent = mensaje;
    span.style.color = tipo === 'error' ? 'red' : 'green';
    span.style.display = 'block';

    // Ocultar despu√©s de 5 segundos
    setTimeout(() => {
      span.textContent = '';
      span.style.display = 'none';
    }, 5000);
  }

  // Limpia ambos mensajes (error y √©xito)
  function limpiarMensajes() {
    errorSpan.textContent = '';
    errorSpan.style.display = 'none';
    exitoSpan.textContent = '';
    exitoSpan.style.display = 'none';
  }

  // Valida si el correo es v√°lido con expresi√≥n regular
  function validarEmail(email) {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
  }
}
